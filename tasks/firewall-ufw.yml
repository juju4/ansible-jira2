---

- import_tasks: logging.yml

## Centos7: requires EPEL
- name: Install ufw
  ansible.builtin.package: name=ufw state=present
  register: pkg_result
  until: pkg_result is success

- name: UFW | RedHat | requires ufw to be enabled before configuration
  ufw: state=enabled
  when: ansible_os_family == 'RedHat'

- name: UFW | ensure logging medium is enabled
  ufw: logging={{ jira_ufw_default_logging }}

- name: UFW | always allow ssh
  ufw:
    rule: allow
    name: "{{ ufw_ssh_rulename }}"
    log: yes

- name: UFW | allow access from defined networks
  ufw: rule=allow src={{ item }}
  with_items: "{{ jira_ufw_access }}"

- name: UFW | allow access from defined networks - with logging
  ufw: rule=allow src={{ item }} log=yes
  with_items: "{{ jira_ufw_access_with_log }}"

- name: UFW | allow incoming traffic for defined ports
  ufw:
    rule: allow
    interface: "{{ jira_ufw_if }}"
    direction: in
    to_port: "{{ item | string }}"
  with_items: "{{ jira_ufw_allow_ports_in }}"

- name: UFW | allow outgoing traffic for defined ports - {{ jira_ufw_if }}
  ufw:
    rule: allow
    interface: "{{ jira_ufw_if }}"
    direction: out
    to_port: "{{ item | string }}"
    log: "{{ jira_ufw_out_logging }}"
  with_items: "{{ jira_ufw_allow_ports_out }}"

- name: UFW | allow all outgoing traffic for defined interfaces
  ufw: rule=allow interface={{ item }} direction=out
  with_items: "{{ jira_ufw_allow_if_out }}"

## FIXME! ansible module only affect incoming traffic, not idempotent
## Note: keep last, especially if you block by default
- name: UFW | default policy (incoming)
  ufw:
    state: enabled
    direction: incoming
    policy: "{{ jira_ufw_default_policy }}"
    log: yes
- name: UFW | check current status
  ansible.builtin.command: "ufw status verbose"
  register: ufwstatus
  changed_when: false
- name: UFW | default policy (outgoing)
  ansible.builtin.command: "ufw default {{ jira_ufw_default_policy }} outgoing"
  when: ufwstatus.stdout.find(jira_ufw_default_policy + ' (outgoing)') == -1

- name: Jira UFW and VPN
  block:
    - name: Check if custom ufw.service file
      ansible.builtin.stat: path=/etc/systemd/system/ufw.service
      register: svc
    - name: Creating custom ufw.service
      ansible.builtin.copy:
        src: /lib/systemd/system/ufw.service
        dest: /etc/systemd/system/ufw.service
        mode: '0644'
        remote_src: true
    - name: Set ufw systemd_string
      ansible.builtin.set_fact:
        systemd_string: "{% for i in jira_ufw_vpn %}sys-devices-virtual-net-{{ i }}.device {% endfor %}"
    - name: Ensure vpn interface are presents in ufw.service
      ansible.builtin.lineinfile:
        dest: /etc/systemd/system/ufw.service
        line: "{{ item }}"
        mode: '0644'
        insertafter: 'Before=network.target'
      with_items:
        - "Wants={{ systemd_string }}"
        - "After={{ systemd_string }}"
  when: jira_ufw_vpn is defined and jira_ufw_vpn != []
